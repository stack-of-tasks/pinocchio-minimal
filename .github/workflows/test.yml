name: Tests

on:
  push:
  schedule:
    - cron: "0 7 * * 0"

env:
  ROBOTPKG_URL: "http://robotpkg.openrobots.org/packages/debian"

jobs:
  test:
    name: "Test ${{ matrix.pm }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      matrix:
        pm: ["pip", "conda"] # , "nix"]
        os: ["ubuntu", "macos", "windows"]
        exclude:
          - pm: "pip"
            os: "windows"
          - pm: "nix"
            os: "windows"
        include:
          - pm: "apt"
            os: "ubuntu"
    steps:
      - uses: actions/checkout@v3

      # pip
      - if: matrix.pm == 'pip'
        uses: actions/setup-python@v4  # required only because macos-latest still has python 2 by defaultâ€¦
        with:
          python-version: "3.11"
      - if: matrix.pm == 'pip'
        run: pip install pin[build]
      - if: matrix.pm == 'pip'
        run: echo "CMAKE_PREFIX_PATH=$(cmeel cmake)" >> $GITHUB_ENV

      # conda
      - if: matrix.pm == 'conda'
        uses: conda-incubator/setup-miniconda@v2
      - if: matrix.pm == 'conda'
        run: conda install -n test -c conda-forge pinocchio
      - if: matrix.pm == 'conda'
        run: echo "CMAKE_PREFIX_PATH=$CONDA/envs/test" >> $GITHUB_ENV

      # apt
      - if: matrix.pm == 'apt'
        run: sudo wget "${ROBOTPKG_URL}/robotpkg.gpg" -O /robotpkg.gpg;
      - if: matrix.pm == 'apt'
        run: echo "deb [arch=amd64 signed-by=/robotpkg.gpg] ${ROBOTPKG_URL}/pub jammy robotpkg" | sudo tee /etc/apt/sources.list.d/robotpkg.list
      - if: matrix.pm == 'apt'
        run: sudo apt-get update && sudo apt-get install -qy robotpkg-py310-pinocchio
      - if: matrix.pm == 'apt'
        run: echo "CMAKE_PREFIX_PATH=/opt/openrobots" >> $GITHUB_ENV

      # windows
      # thx https://gist.github.com/justinian/81a2e55c89e8301a8a96
      # thx https://stackoverflow.com/a/74547513/1368502
      - if: matrix.os == 'windows'
        run: >
          cmd /c "'%programfiles%\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat' && set"
          | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - run: cmake -B build -S .
      - run: cmake --build build
      - run: ./build/main
